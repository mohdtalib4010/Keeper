{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","note","setNote","handleChange","event","target","name","value","prevNote","onChange","placeholder","rows","onAdd","preventDefault","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","map","key","ReactDOM","render","document","getElementById"],"mappings":"gMAUeA,MARf,WACE,OACE,gCACE,wCCMSC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,+CAAgBF,KCWPG,MAff,SAAcC,GAMZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QARZ,WACIJ,EAAMK,SAASL,EAAMM,MAOrB,Y,OC6BSC,MAvCf,SAAoBP,GAAQ,IAAD,EAEDQ,mBAAS,CAC/BN,MAAO,GACPC,QAAQ,KAJe,mBAElBM,EAFkB,KAEZC,EAFY,KAO1B,SAASC,EAAaC,GAAO,IAAD,EACDA,EAAMC,OAArBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEbL,GAAQ,SAAAM,GACH,OAAO,2BACHA,GADJ,IAEC,CAACF,GAAOC,OAelB,OACE,6BACE,8BACE,2BAAOD,KAAK,QAAQG,SAAUN,EAAcI,MAAON,EAAKP,MAAOgB,YAAY,UAC3E,8BAAUJ,KAAK,UAAUG,SAAUN,EAAcI,MAAON,EAAKN,QAASe,YAAY,iBAAiBC,KAAK,MACxG,4BAAQf,QAfd,SAAoBQ,GACfZ,EAAMoB,MAAMX,GAEZC,EAAQ,CACPR,MAAO,GACPC,QAAQ,KAETS,EAAMS,mBAQL,UCUOC,MAvCf,WAAgB,IAAD,EAEad,mBAAS,IAFtB,mBAENe,EAFM,KAECC,EAFD,KAUb,SAASC,EAAWnB,GACbkB,GAAS,SAAAE,GACV,OAAQA,EAAUC,QAAO,SAACC,EAAWC,GAChC,OAAOA,IAAUvB,QAM5B,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYc,MAlBhB,SAAiBU,GACbN,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAaA,GAAb,CAAwBI,UAkBzBP,EAAMQ,KAAI,SAACH,EAASC,GACnB,OAAO,kBAAC,EAAD,CACLG,IAAMH,EACNvB,GAAKuB,EACL3B,MAAQ0B,EAAS1B,MACjBC,QAAWyB,EAASzB,QACpBE,SAAYoB,OAIhB,kBAAC,EAAD,QCpCNQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b21d892c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Note(props) {\n \n  function handleClick() {\n      props.onDelete(props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}>DELETE</button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n\n  const [note, setNote] = useState({\n    title: \"\",\n    content:\"\"\n  });\n\n function handleChange(event){\n      const {name, value} = event.target;\n\n      setNote(prevNote =>{\n           return {\n            ...prevNote,\n            [name]: value  \n           };\n      })\n  }\n\n  function submitNote(event){\n       props.onAdd(note)\n\n       setNote({\n        title: \"\",\n        content:\"\"\n       });\n       event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form>\n        <input name=\"title\" onChange={handleChange} value={note.title} placeholder=\"Title\" />\n        <textarea name=\"content\" onChange={handleChange} value={note.content} placeholder=\"Take a note...\" rows=\"3\" />\n        <button onClick={submitNote}>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n      setNotes(prevNotes => {\n        return   [...prevNotes, newNote];\n      })\n  }\n\n  function deleteNote(id) {\n         setNotes(prevNotes => {\n        return  prevNotes.filter((noteItem , index)  =>{\n             return index !== id;\n           })\n         })\n  }\n\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd= {addNote}  />\n\n      {notes.map((noteItem,index) => {\n        return <Note\n          key= {index}\n          id= {index}\n          title ={noteItem.title}\n          content = {noteItem.content}\n          onDelete = {deleteNote}\n        />\n      }) }\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}